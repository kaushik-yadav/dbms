DELIMITER //
CREATE TABLE Borrower (
  roll_no int,
  name varchar(20),
  date_of_issue date,
  b_name varchar(20),
  status varchar(1)
);

CREATE TABLE Fine (
  roll_no int,
  date DATE,
  amt int
);

INSERT INTO Borrower VALUES (1, 'k', '2024-07-06','dbms','I');
INSERT INTO Borrower VALUES (2, 'a', '2024-07-07','python','I');
INSERT INTO Borrower VALUES (3, 'r', '2024-07-08','java','I');
INSERT INTO Borrower VALUES (4, 's', '2024-07-09','c','I');

CREATE procedure fine_calc(IN rno int,IN b_name varchar(20))
  BEGIN
    declare diff int;
    declare i_date date;
    declare fine_amt int;
    declare exit handler for sqlexception select 'Table not found';
    
    select date_of_issue into i_date 
    From Borrower
    where roll_no=rno and b_name = b_name;
    
    select datediff(curdate(),i_date) into diff;
    
    if diff>15 and diff<=30 then
      set fine_amt = diff*5;
    elseif (diff>30) then
      set fine_amt = (30-15)*5 + (diff-30)*50;
    end if;
    
    INSERT into Fine values(rno,curdate(),fine_amt);
    update Borrower set status = 'R' Where roll_no=rno and b_name=b_name;
  END //
  
  DELIMITER ;
call fine_calc(3,'java');
select * from Borrower;
select * from Fine;




Long form of DDL, DML, DCL, TCL:

DDL: Data Definition Language – used to define and manage database schema objects (e.g., tables, indexes).
DML: Data Manipulation Language – used to manage data within schema objects (e.g., inserting, updating, deleting rows).
DCL: Data Control Language – used to control access to data in the database (e.g., granting or revoking permissions).
TCL: Transaction Control Language – used to manage transactions in a database (e.g., commit, rollback, savepoint).
Difference between Update and Alter commands:

UPDATE: A DML command used to modify existing records in a table. It changes the values of specific columns in selected rows.
ALTER: A DDL command used to modify the structure of a database object. It can add, delete, or modify columns in an existing table but does not modify data within rows.
Aggregate functions: Aggregate functions are functions in SQL that perform calculations on a set of values and return a single result. Common aggregate functions include:

SUM(): Calculates the total sum of a numeric column.
AVG(): Calculates the average value of a numeric column.
COUNT(): Counts the number of rows or non-null values in a column.
MAX(): Finds the maximum value in a column.
MIN(): Finds the minimum value in a column.
These functions are often used with the GROUP BY clause to group data before aggregation.






